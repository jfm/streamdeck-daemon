---
name: (master) Test, Build and Publish

on:
  push:
    branches: master
    paths-ignore: pyproject.toml

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project false
          poetry config cache-dir ~/.poetry
          poetry config virtualenvs.path ~/.poetry/venv
          poetry install
      - name: Lint with flake8
        run: |
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          poetry run pytest
      - name: Build and publish
        run: |
          poetry version patch
          poetry publish --build -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }}
      - name: Commit version changes
        run: |
          echo $(poetry version)
          git config user.name "Github Actions Bot"
          git config user.email "<>"
          git tag "v$(poetry version | awk '{print $NF}')"
          git commit -a -m "v$(poetry version | awk '{print $NF}')"
          git push
